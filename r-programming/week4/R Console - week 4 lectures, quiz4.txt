
R version 3.1.3 (2015-03-09) -- "Smooth Sidewalk"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[R.app GUI 1.65 (6913) x86_64-apple-darwin13.4.0]

[History restored from /Users/ashleyelizabeth/.Rapp.history]

> #str (structure): compactly display internal structure of an R object
> #rnorm: random normals
> #generating random variables: rnorm, dnorm, pnorm, rpois
> #set the seed for reproducibility 
> #system.time(<function>): gives time taken to run function
> #user time can be greater than elapsed time because of parallelization
> #rprof(): r profiler
> #summaryRprof(): summarizes output from rprof() function
> #by.total: divides time spent in each function by total runtime
> #by.self: does same, but subtracts out time spent in functions above in the call stack
> # ^ used to find bottlenecks in your code
> set.seed(1)
> rpois(5, 2)
[1] 1 1 2 4 1
> set.seed(1)
> rpois(5, 2)
[1] 1 1 2 4 1
> set.seed(1)
> rpois(5, 2)
[1] 1 1 2 4 1
> rnorm
function (n, mean = 0, sd = 1) 
.External(C_rnorm, n, mean, sd)
<bytecode: 0x7fb0ca8e3460>
<environment: namespace:stats>
> ?rnorm
starting httpd help server ... done
> ?rpois
> set.seed(10)
> x <- rep(0:1, each = 5)
> e <- rnorm(10, 0, 20)
> y <- 0.5 + 2 * x + e
> x
 [1] 0 0 0 0 0 1 1 1 1 1
> e
 [1]   0.3749234  -3.6850508 -27.4266110 -11.9833543   5.8909025   7.7958860
 [7] -24.1615235  -7.2735203 -32.5334536  -5.1295679
> y
 [1]   0.8749234  -3.1850508 -26.9266110 -11.4833543   6.3909025  10.2958860
 [7] -21.6615235  -4.7735203 -30.0334536  -2.6295679
> ?qbinom
> library(datasets)
> Rprof()
> fit <- lm(y ~ x1 + x2)
Error in eval(expr, envir, enclos) : object 'x1' not found
> Rprof(NULL)
> summaryRprof()
$by.self
[1] self.time  self.pct   total.time total.pct 
<0 rows> (or 0-length row.names)

$by.total
[1] total.time total.pct  self.time  self.pct  
<0 rows> (or 0-length row.names)

$sample.interval
[1] 0.02

$sampling.time
[1] 0

> Rprof(fit)
Error in Rprof(fit) : object 'fit' not found
> fit
Error: object 'fit' not found
> x1 <- 3
> x2 <- 4
> library(datasets)
> Rprof()
> fit <- lm(y ~ x1 + x2)
Error in model.frame.default(formula = y ~ x1 + x2, drop.unused.levels = TRUE) : 
  variable lengths differ (found for 'x1')
> Rprof(NULL)
> fit
Error: object 'fit' not found
> #Standard probability distributions in R have a set of four functions that can be used to simulate variates, evaluate the density, evaluate the cumulative density, and evaluate the quantile function.
> #Functions beginning with the `r' prefix are used to simulate random variates.
> #Functions beginning with the `q' prefix are used to evaluate the quantile (inverse cumulative distribution) function.
2015-04-24 13:24:11.270 R[46279:707] *** WARNING: Method convertPointFromBase: in class NSView is deprecated on 10.7 and later. It should not be used in new applications. 
> 